

/*****************************************************************************
  1 头文件包含
*****************************************************************************/
#include "gtest/gtest.h"
#include "llt_mockcpp.h"

using namespace testing;
#ifdef __cplusplus
extern "C"
{
#endif

	#ifndef OK
	#define OK 0
	#endif

	#ifndef ERROR
	#define ERROR (-1)
	#endif

    extern int  ashell_init(void);
    extern int  ashell_uninit(void);
    extern int  usb_tty_exist(char *tty_name);
    extern void ashell_console_write(struct console *cons, const char *buf, unsigned count);
    extern int  usb_shell_init(void);

    extern void *dma_alloc_coherent(struct device *dev, size_t size, unsigned long long *dma_handle, int  flag);

    extern long sys_write(unsigned int fd, const char  *buf, long unsigned int count);
    extern signed int udi_read(signed int handle, void* pMemObj, unsigned int u32Size);
    extern struct cshell_ctx_t g_cshell_ctx;

    int g_buf;

    extern int test_ashell_console_write_fail1(void);
    extern int test_ashell_console_write_fail2(void);
    extern int test_ashell_console_write_fail3(void);
    extern int test_ashell_console_write_fail4(void);
    extern int test_ashell_console_write_ok(void);


    /* 被测函数 */

    /* 被测全局变量 */

#ifdef __cplusplus
}
#endif

#if 0

/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_init, UT001_ashell_init_ok)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/
    int ret = 0;

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/


    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    MOCKER(dma_alloc_coherent).stubs().will(returnValue(1));
    ret = ashell_init();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    	GlobalMockObject::reset();
}
#endif


/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_console_write, UT001_param_is_error)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    int ret = 0;
    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = test_ashell_console_write_fail1();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(ERROR, ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
}



/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_console_write, UT002_tty_is_null)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    int ret = 0;
    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = test_ashell_console_write_fail2();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(ERROR, ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
}



/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_console_write, UT003_device_fail)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/
    int ret = 0;
    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = test_ashell_console_write_fail3();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(ERROR, ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
}


/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_console_write, UT004_write_fail)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/
    int ret = 0;
    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = test_ashell_console_write_fail4();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(ERROR, ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
}


/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_ashell_console_write, UT005_write_success)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/
    int ret = 0;
    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = test_ashell_console_write_ok();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(OK, ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
}


/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_usb_shell_init, UT001_ashell_init_tty_not_exist_fail)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    int ret = 0;
    MOCKER(usb_tty_exist).stubs().will(returnValue(ERROR));

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/


    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = usb_shell_init();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(OK,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}



/*****************************************************************************
  (1)桩函数定义
*****************************************************************************/


/*****************************************************************************
  (2)UT函数实现
*****************************************************************************/
TEST(test_usb_shell_init, UT002_init_success)
{

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    int ret = 0;

    MOCKER(usb_tty_exist).stubs().will(returnValue(0));

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/


    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    ret = usb_shell_init();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(OK,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}

